<?xml version='1.0' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.13">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.1.8">
      <jobProperties/>
      <triggers/>
      <parameters/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>Tenant</name>
          <description></description>
          <defaultValue>demo</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>EnvName</name>
          <description></description>
          <defaultValue>qa</defaultValue>
        </hudson.model.StringParameterDefinition>
        <org.biouno.unochoice.DynamicReferenceParameter plugin="uno-choice@1.5.3">
          <name>ConfigureOnVault</name>
          <description>IF you are the first time to configure those values on Vault. Please fill in the correct values for each path.  

This is the mini scope configuration on Vault for deploy Commerce
</description>
          <randomName>choice-parameter-5619527128633032</randomName>
          <visibleItemCount>1</visibleItemCount>
          <script class="org.biouno.unochoice.model.GroovyScript">
            <secureScript plugin="script-security@1.29.1">
              <script>def process = [&quot;python&quot;,&quot;/commerce-devops-utilities/utilities/vault/vault_keyvalue.py&quot;,&quot;fetchkv&quot;,&quot;-tenant&quot;,Tenant,&quot;-env&quot;,EnvName,&quot;-vault_url&quot;,vault_url,&quot;-vault_token&quot;,vault_token].execute()
result=process.in.text
if(result == &quot;None\n&quot;){
result = &quot;&quot;&quot;
${Tenant}/${EnvName}/domainName=default.svc.cluster.local
${Tenant}/${EnvName}/auth/dbHost=
${Tenant}/${EnvName}/auth/dbName=
${Tenant}/${EnvName}/auth/dbPassword=
${Tenant}/${EnvName}/auth/dbPort=
${Tenant}/${EnvName}/auth/dbUser=
${Tenant}/${EnvName}/auth/dbType=db2
${Tenant}/${EnvName}/auth/merchantKeyEncrypte=
${Tenant}/${EnvName}/auth/spiUserName=
${Tenant}/${EnvName}/auth/spiUserPwd=
${Tenant}/${EnvName}/live/dbHost=
${Tenant}/${EnvName}/live/dbName=
${Tenant}/${EnvName}/live/dbPassword=
${Tenant}/${EnvName}/live/dbPort=
${Tenant}/${EnvName}/live/dbUser=
${Tenant}/${EnvName}/live/dbType=db2
${Tenant}/${EnvName}/live/merchantKeyEncrypte=
${Tenant}/${EnvName}/live/spiUserName=
${Tenant}/${EnvName}/live/spiUserPwd=
&quot;&quot;&quot;
}
html=
&quot;&quot;&quot;
&lt;p&gt;
  &lt;textarea type=&quot;text&quot; style=&quot;width:700px;height:400px;&quot; name=&quot;value&quot; &gt;${result}&lt;/textarea&gt;
&lt;/p&gt;
&quot;&quot;&quot;</script>
              <sandbox>false</sandbox>
            </secureScript>
            <secureFallbackScript plugin="script-security@1.29.1">
              <script></script>
              <sandbox>false</sandbox>
            </secureFallbackScript>
          </script>
          <projectName>ManageVaultConfig_Base</projectName>
          <parameters class="linked-hash-map"/>
          <referencedParameters>Tenant,EnvName</referencedParameters>
          <choiceType>ET_FORMATTED_HTML</choiceType>
          <omitValueField>true</omitValueField>
        </org.biouno.unochoice.DynamicReferenceParameter>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
      <triggers/>
    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.36.1">
    <script>pipeline {
    agent none
    stages {
        stage(&apos;Create or Update Key-Value on Valut &apos;) {
            agent { label &apos;master&apos; }
            steps {
                sh &quot;python3.6 /commerce-devops-utilities/utilities/vault/vault_keyvalue.py insertkv -vault_url ${vault_url} -vault_token ${vault_token} -tenant ${Tenant} -env ${EnvName} -keyvalues &apos;${ConfigureOnVault}&apos; -separater &apos;\n&apos;&quot;
            }
        }
    }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>